<UserControl x:Class="GsdmlLinker.Controls.IolDeviceControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:converters="clr-namespace:GsdmlLinker.Converters"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:GsdmlLinker.Controls"
             xmlns:selector="clr-namespace:GsdmlLinker.TemplateSelectors"

             xmlns:system="clr-namespace:System;assembly=netstandard"
             xmlns:models="clr-namespace:GsdmlLinker.Core.Models;assembly=GsdmlLinker.Core"
             mc:Ignorable="d" >
    <UserControl.Resources>
        <converters:InvertBoolConverter x:Key="InvertBoolConverter"/>
        <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <converters:BoolToHiddenConverter x:Key="BoolToHiddenConverter"/>

        <DataTemplate x:Key="BoolTemplate">
            <CheckBox IsChecked="{Binding DefaultValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
        </DataTemplate>
        <DataTemplate x:Key="BoolCommandTemplate">
            <CheckBox IsChecked="{Binding DefaultValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
        </DataTemplate>
        <DataTemplate x:Key="ListTemplate">
            <ComboBox ItemsSource="{Binding Values, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" SelectedValue="{Binding DefaultValue}" SelectedValuePath="Key" DisplayMemberPath="Value"/>
        </DataTemplate>
        <DataTemplate x:Key="ValueTemplate">
            <controls:NumericUpDown Value="{Binding DefaultValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Minimum="{Binding Minimum}" Maximum="{Binding Maximum}"/>
        </DataTemplate>
        <DataTemplate x:Key="FloatTemplate">
            <TextBox Text="{Binding DefaultValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                     Style="{StaticResource MahApps.Styles.TextBox}"/>
        </DataTemplate>
        <DataTemplate x:Key="StringTemplate">
            <TextBox Text="{Binding DefaultValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TextWrapping="Wrap"
                     Style="{StaticResource MahApps.Styles.TextBox}"/>
        </DataTemplate>
        <DataTemplate x:Key="RecortTemplate">
            <ToggleButton VerticalAlignment="Stretch"  HorizontalAlignment="Right"
                  Command="{Binding DataContext.ViewSubParametersCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Page}}"
                  CommandParameter="{Binding}" Style="{StaticResource MahApps.Styles.ToggleButton}">
                <!--Width="{Binding Source={RelativeSource Mode=TemplatedParent}, Path=ActualWidth, UpdateSourceTrigger=PropertyChanged}"-->
                <ToggleButton.Template>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid Background="{StaticResource MahApps.Brushes.Control.Background}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="{Binding Source={RelativeSource Mode=TemplatedParent}, Path=ActualHeight, UpdateSourceTrigger=PropertyChanged}"/>
                            </Grid.ColumnDefinitions>
                            <Path Grid.Column="1" RenderOptions.EdgeMode="Aliased" Name="ExpandPath"
                                  VerticalAlignment="Center" HorizontalAlignment="Center"
                                  Stroke="{StaticResource MahApps.Brushes.Text}" StrokeThickness="2" 
                                  Data="M 5 1 L 5 9 M 1 5 L 9 5" />
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Data" TargetName="ExpandPath" Value="M 1 5 L 9 5"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter Property="Data" TargetName="ExpandPath" Value="M 5 1 L 5 9 M 1 5 L 9 5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </ToggleButton.Template>
            </ToggleButton>
        </DataTemplate>
        <selector:ParameterTemplateSelector x:Key="DataTemplateSelector" 
                                            BoolTemplate="{StaticResource BoolTemplate}"
                                            ValueTemplate="{StaticResource ValueTemplate}"
                                            FloatTemplate="{StaticResource FloatTemplate}"
                                            ListTemplate="{StaticResource ListTemplate}"
                                            StringTemplate="{StaticResource StringTemplate}"
                                            RecordTemplate="{StaticResource RecortTemplate}"/>
    </UserControl.Resources>
    <Grid Margin="{StaticResource SmallMargin}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="3"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Image Grid.Column="0" Source="{Binding SlaveDeviceSelected.Icon}" Stretch="Uniform" VerticalAlignment="Top"  MaxHeight="100"/>
            <StackPanel Grid.Column="1" Orientation="Vertical" CanVerticallyScroll="True" Margin="{StaticResource SmallRightMargin}">
                <StackPanel Orientation="Horizontal">
                    <Button Command="{Binding RenameDeviceCommand}"
                            Style="{StaticResource MahApps.Styles.Button.MetroWindow.Base}">
                        <TextBlock Text="&#xE70F;" FontSize="16" FontFamily="Segoe MDL2 Assets" Margin="{StaticResource SmallMargin}"/>
                    </Button>
                    <TextBlock Text="{Binding DeviceRename, UpdateSourceTrigger=PropertyChanged}"
                               Style="{StaticResource SubtitleTextStyle}" VerticalAlignment="Center" />
                </StackPanel>

                <StackPanel Orientation="Horizontal">
                    <Button Style="{StaticResource MahApps.Styles.Button.MetroWindow.Base}">
                        <TextBlock Text="&#xE72E;" FontSize="16" FontFamily="Segoe MDL2 Assets" Margin="{StaticResource SmallMargin}"/>
                    </Button>
                    <StackPanel Orientation="Vertical" VerticalAlignment="Center">
                        <TextBlock Text="{Binding SlaveDeviceSelected.VendorId, StringFormat='{}Vendor ID: {0}'}" Margin="{StaticResource XSmallLeftMargin}" />
                        <TextBlock Text="{Binding SlaveDeviceSelected.DeviceId, StringFormat='{}Device ID: {0}'}" Margin="{StaticResource XSmallLeftMargin}" />
                    </StackPanel>

                </StackPanel>
            </StackPanel>
        </Grid>
        <TextBox Grid.Row="1" Text="{Binding SlaveDeviceSelected.Description, UpdateSourceTrigger=PropertyChanged}" TextWrapping="Wrap"
                 Padding="{StaticResource XSmallMargin}" Background="{DynamicResource MahApps.Brushes.Gray10}"/>
        <GridSplitter Grid.Row="2"/>
        <Expander Grid.Row="3" IsExpanded="True" Header="Parameters">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid Grid.Row="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="{Binding CheckColumnSize, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                        <!--x:Name="CheckColumn" Width="Auto" MinWidth="25"/>-->
                        <ColumnDefinition Width="{Binding IndexColumnSize, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                        <!--x:Name="IndexColumn" Width="Auto"/>-->
                        <ColumnDefinition Width="{Binding NameColumnSize, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                        <!--x:Name="NameColumn" Width="*"/>-->
                        <ColumnDefinition Width="{Binding ParameterColumnSize, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                        <!--x:Name="ParameterColumn" Width="*"/>-->
                    </Grid.ColumnDefinitions>
                    <CheckBox Grid.Column="0" IsThreeState="True" IsChecked="{Binding SelectAll}"/>
                    <TextBlock Grid.Column="1" Text="Index" Margin="2"/>
                    <TextBlock Grid.Column="2" Text="Name" Margin="2"/>
                </Grid>
                <ScrollViewer Grid.Row="1" >
                    <ItemsControl ItemsSource="{Binding SlaveParameters}" VirtualizingPanel.IsVirtualizing="True" VirtualizingPanel.VirtualizationMode="Recycling">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Grid ToolTip="{Binding Description}"
                                   IsEnabled="{Binding IsReadOnly, Converter={StaticResource InvertBoolConverter}}"
                                   Visibility="{Binding IsVisible, Converter={StaticResource BoolToVisibilityConverter}}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="{Binding CheckColumnSize, UpdateSourceTrigger=PropertyChanged}"/>
                                        <!--Width="{Binding ElementName=CheckColumn, Path=ActualWidth}"/>-->
                                        <ColumnDefinition Width="{Binding IndexColumnSize, UpdateSourceTrigger=PropertyChanged}"/>
                                        <!--Width="{Binding ElementName=IndexColumn, Path=ActualWidth}"/>-->
                                        <ColumnDefinition Width="{Binding NameColumnSize, UpdateSourceTrigger=PropertyChanged}"/>
                                        <!--Width="{Binding ElementName=NameColumn, Path=ActualWidth}"/>-->
                                        <ColumnDefinition Width="{Binding ParameterColumnSize, UpdateSourceTrigger=PropertyChanged}"/>
                                        <!--Width="{Binding ElementName=ParameterColumn, Path=ActualWidth}"/>-->
                                    </Grid.ColumnDefinitions>
                                    <CheckBox Grid.Column="0" Margin="2"
                                              IsChecked="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                        <CheckBox.Style>
                                            <Style TargetType="CheckBox">
                                                <Setter Property="Visibility" Value="Hidden"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Subindex}" Value="{x:Null}">
                                                        <Setter Property="Visibility" Value="Visible"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </CheckBox.Style>
                                    </CheckBox>
                                    <TextBlock Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Stretch"
                                               Text="{Binding IndexValue, UpdateSourceTrigger=PropertyChanged}"/>
                                    <TextBlock Grid.Column="2" Margin="2 0" VerticalAlignment="Center" HorizontalAlignment="Stretch"
                                               Text="{Binding Name}"/>
                                    <ContentControl Grid.Column="3" Margin="2 0" Visibility="{Binding IsReadOnly, Converter={StaticResource BoolToHiddenConverter}}"
                                                Content="{Binding}" ContentTemplateSelector="{StaticResource DataTemplateSelector}"/>
                                    <Grid.Style>
                                        <Style TargetType="Grid">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsReadOnly}" Value="True">
                                                    <Setter Property="TextBlock.Foreground" Value="{StaticResource MahApps.Brushes.Badged.Foreground.Disabled}"/>
                                                    <Setter Property="Grid.Background" Value="{StaticResource MahApps.Brushes.Badged.Background.Disabled}"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Grid.Style>
                                </Grid>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="Vertical"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                    </ItemsControl>
                </ScrollViewer>

            </Grid>

        </Expander>
    </Grid>
</UserControl>
