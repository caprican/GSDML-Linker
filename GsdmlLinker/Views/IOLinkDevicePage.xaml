<Page x:Class="GsdmlLinker.Views.IOLinkDevicePage"
      Style="{DynamicResource MahApps.Styles.Page}"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
      xmlns:localControls="clr-namespace:GsdmlLinker.Controls"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
      xmlns:local="clr-namespace:GsdmlLinker.Views"
      xmlns:converters="clr-namespace:GsdmlLinker.Converters"
      xmlns:properties="clr-namespace:GsdmlLinker.Properties"
      xmlns:selector="clr-namespace:GsdmlLinker.TemplateSelectors"
      xmlns:viewModel="clr-namespace:GsdmlLinker.ViewModels"
      d:DataContext="{d:DesignInstance Type=viewModel:IOLinkDeviceViewModel}"
      mc:Ignorable="d">
    <Page.Resources>
        <converters:InvertBoolConverter x:Key="InvertBoolConverter"/>
        <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <converters:BoolToHiddenConverter x:Key="BoolToHiddenConverter"/>

        <DataTemplate x:Key="BoolTemplate">
            <CheckBox IsChecked="{Binding DefaultValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
        </DataTemplate>
        <DataTemplate x:Key="BoolCommandTemplate">
            <CheckBox IsChecked="{Binding DefaultValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
        </DataTemplate>
        <DataTemplate x:Key="ListTemplate">
            <ComboBox ItemsSource="{Binding Values, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" SelectedValue="{Binding DefaultValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" SelectedValuePath="Key" DisplayMemberPath="Value"/>
        </DataTemplate>
        <DataTemplate x:Key="ValueTemplate">
            <controls:NumericUpDown Value="{Binding DefaultValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Minimum="{Binding Minimum}" Maximum="{Binding Maximum}"/>
        </DataTemplate>
        <DataTemplate x:Key="FloatTemplate">
            <TextBox Text="{Binding DefaultValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                     Style="{StaticResource MahApps.Styles.TextBox}"/>
        </DataTemplate>
        <DataTemplate x:Key="StringTemplate">
            <TextBox Text="{Binding DefaultValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TextWrapping="Wrap"
                     Style="{StaticResource MahApps.Styles.TextBox}"/>
        </DataTemplate>
        <DataTemplate x:Key="RecortTemplate">
            <ToggleButton 
                Command="{Binding DataContext.ViewSubParametersCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}}"
                CommandParameter="{Binding}" Style="{StaticResource MahApps.Styles.ToggleButton}">
                <ToggleButton.Template>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid Background="{StaticResource MahApps.Brushes.Control.Background}">
                            <Path Grid.Column="1" RenderOptions.EdgeMode="Aliased" Name="ExpandPath"
                          VerticalAlignment="Center" HorizontalAlignment="Right" Margin="0 0 8 0 "
                          Stroke="{StaticResource MahApps.Brushes.Text}" StrokeThickness="2" 
                          Data="M 5 1 L 5 9 M 1 5 L 9 5" />
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Data" TargetName="ExpandPath" Value="M 1 5 L 9 5"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter Property="Data" TargetName="ExpandPath" Value="M 5 1 L 5 9 M 1 5 L 9 5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </ToggleButton.Template>
            </ToggleButton>
        </DataTemplate>
        <selector:ParameterTemplateSelector x:Key="DataTemplateSelector" 
                                    BoolTemplate="{StaticResource BoolTemplate}"
                                    ValueTemplate="{StaticResource ValueTemplate}"
                                    FloatTemplate="{StaticResource FloatTemplate}"
                                    ListTemplate="{StaticResource ListTemplate}"
                                    StringTemplate="{StaticResource StringTemplate}"
                                    RecordTemplate="{StaticResource RecortTemplate}"/>
    </Page.Resources>
    <controls:MetroHeader Header="{x:Static properties:Resources.ShellIOLinkDevicesPage}" Style="{StaticResource MahApps.Styles.MetroHeader}" Margin="{StaticResource XSmallMargin}">
        <controls:MetroHeader.HeaderTemplate>
            <DataTemplate>
                <StackPanel Orientation="Vertical" UseLayoutRounding="True">
                    <TextBlock Margin="{StaticResource XXSmallTopBottomMargin}" HorizontalAlignment="Left" VerticalAlignment="Bottom" Text="{Binding}" />
                    <Separator />
                </StackPanel>
            </DataTemplate>
        </controls:MetroHeader.HeaderTemplate>

        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition Height="3"/>
                <RowDefinition>
                    <RowDefinition.Style>
                        <Style TargetType="RowDefinition">
                            <Setter Property="Height" Value="*"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding SelectedItem}" Value="{x:Null}">
                                    <Setter Property="Height" Value="0"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </RowDefinition.Style>
                </RowDefinition>
            </Grid.RowDefinitions>
            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition>
                        <ColumnDefinition.Style>
                            <Style TargetType="ColumnDefinition">
                                <Setter Property="Width" Value="*"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding SlaveDeviceSelected}" Value="{x:Null}">
                                        <Setter Property="Width" Value="0"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ColumnDefinition.Style>
                    </ColumnDefinition>
                </Grid.ColumnDefinitions>
                
                <localControls:VendorListControl ItemsSource="{Binding SlaveVendors}" SelectedItem="{Binding SlaveDeviceSelected, Mode=TwoWay}"/>

                <Grid Grid.Column="1" Margin="{StaticResource SmallMargin}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="3"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Image Grid.Column="0" Source="{Binding SlaveDeviceSelected.Icon}" Stretch="Uniform" VerticalAlignment="Top"  MaxHeight="100"/>
                        <StackPanel Grid.Column="1" Orientation="Vertical" CanVerticallyScroll="True" Margin="{StaticResource SmallRightMargin}">
                            <StackPanel Orientation="Horizontal">

                                <TextBlock Text="{Binding SlaveDeviceSelected.Name, UpdateSourceTrigger=PropertyChanged}"
                                           Style="{StaticResource SubtitleTextStyle}" VerticalAlignment="Center" />
                            </StackPanel>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <StackPanel Orientation="Horizontal">
                                    <ToggleButton IsChecked="{Binding SlaveDeviceSelected.UnlockId}" Margin="{StaticResource SmallMargin}">
                                        <ToggleButton.Style>
                                            <Style TargetType="ToggleButton">
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                            <Grid>
                                                                <Grid.RowDefinitions>
                                                                    <RowDefinition Height="Auto" />
                                                                    <RowDefinition />
                                                                </Grid.RowDefinitions>
                                                                <TextBlock Name="Text" FontSize="24" FontFamily="Segoe MDL2 Assets"/>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsChecked" Value="True">
                                                                    <Setter TargetName="Text" Property="Text" Value="&#xE785;" />
                                                                </Trigger>
                                                                <Trigger Property="IsChecked" Value="False">
                                                                    <Setter TargetName="Text" Property="Text" Value="&#xE72E;" />
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </ToggleButton.Style>
                                    </ToggleButton>
                                    <StackPanel Orientation="Vertical" VerticalAlignment="Center">
                                        <TextBlock Text="{Binding SlaveDeviceSelected.VendorId, StringFormat='{}Vendor ID: {0}'}" Margin="{StaticResource XSmallLeftMargin}" />
                                        <TextBlock Text="{Binding SlaveDeviceSelected.DeviceId, StringFormat='{}Device ID: {0}'}" Margin="{StaticResource XSmallLeftMargin}" />
                                    </StackPanel>
                                </StackPanel>
                                <Button Grid.Column="1" Command="{Binding ProcessDataViewCommand}" 
                                        Style="{StaticResource MahApps.Styles.Button.Square.Accent}">
                                    <TextBlock Text="IO" FontSize="16" Margin="{StaticResource SmallMargin}"/>
                                </Button>
                            </Grid>
                        </StackPanel>
                    </Grid>
                    <TextBox Grid.Row="1" Text="{Binding SlaveDeviceSelected.Description, UpdateSourceTrigger=PropertyChanged}" TextWrapping="Wrap"
                             Margin="{StaticResource SmallMargin}" Background="{DynamicResource MahApps.Brushes.Gray10}"
                             controls:TextBoxHelper.ClearTextButton="True" controls:TextBoxHelper.UseFloatingWatermark="True"
                             controls:TextBoxHelper.Watermark="Description" controls:TextBoxHelper.WatermarkAlignment="Left"/>

                    <GridSplitter Grid.Row="2"/>

                    <Expander Grid.Row="3" IsExpanded="True" Header="Parameters">
                        <DataGrid ItemsSource="{Binding SlaveParameters}" AutoGenerateColumns="False" CanUserAddRows="False" CanUserDeleteRows="False">
                            <DataGrid.Columns>

                                <DataGridTextColumn Header="Index" Binding="{Binding IndexValue}" IsReadOnly="True"/>
                                <DataGridTextColumn Header="Name" Binding="{Binding Name}" Width="*" IsReadOnly="True" />
                                <DataGridTemplateColumn Width="*" CellTemplateSelector="{StaticResource DataTemplateSelector}">

                                </DataGridTemplateColumn>
                            </DataGrid.Columns>
                            <DataGrid.RowStyle>
                                <Style TargetType="DataGridRow" BasedOn="{StaticResource MahApps.Styles.DataGridRow}">
                                    <Setter Property="ToolTip" Value="{Binding Description}"/>
                                    <Setter Property="IsEnabled" Value="{Binding IsReadOnly, Converter={StaticResource InvertBoolConverter}}"/>
                                    <Setter Property="Visibility" Value="{Binding IsVisible, Converter={StaticResource BoolToVisibilityConverter}}"/>
                                </Style>
                            </DataGrid.RowStyle>
                        </DataGrid>
                    </Expander>
                </Grid>

            </Grid>
        </Grid>

    </controls:MetroHeader>
</Page>
